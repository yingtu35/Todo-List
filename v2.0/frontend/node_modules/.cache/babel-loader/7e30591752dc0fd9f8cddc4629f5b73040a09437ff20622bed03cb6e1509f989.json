{"ast":null,"code":"var _jsxFileName = \"H:\\\\Computer Science\\\\Side Project\\\\todo-list\\\\frontend\\\\src\\\\components\\\\SignUp.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Flex, Box, ButtonGroup, Button, Input, Stack, useColorMode } from \"@chakra-ui/react\";\nimport { FormControl, FormLabel, FormHelperText } from \"@chakra-ui/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SignUp(props) {\n  _s();\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [usernameError, setUsernameError] = useState(false);\n  const [emailError, setEmailError] = useState(false);\n  const [passworError, setPasswordError] = useState(false);\n  const {\n    colorMode,\n    toggleColorMode\n  } = useColorMode();\n  const boxBg = {\n    light: \"gray.100\",\n    dark: \"gray.400\"\n  };\n  const inputBg = {\n    light: \"gray.200\",\n    dark: \"gray.600\"\n  };\n  function handleUsernameInput(e) {\n    setUsername(e.target.value);\n    if (usernameError && username !== \"\") {\n      setUsernameError(false);\n    }\n  }\n  function handleEmailInput(e) {\n    setEmail(e.target.value);\n    if (emailError && email !== \"\") {\n      setEmailError(false);\n    }\n  }\n  function handlePasswordInput(e) {\n    setPassword(e.target.value);\n    if (passwordError && password !== \"\") {\n      setPasswordError(false);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    align: \"center\",\n    justify: \"center\",\n    h: \"80vh\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      p: 5,\n      borderWidth: \"1px\",\n      w: \"500px\",\n      rounded: \"lg\",\n      bg: boxBg[colorMode],\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            value: username,\n            placeholder: \"Username\",\n            bg: inputBg[colorMode],\n            onChange: handleEmailInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), !usernameError ? null : /*#__PURE__*/_jsxDEV(FormHelperText, {\n            children: \"Username is required.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 53\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"email\",\n            value: email,\n            placeholder: \"Email\",\n            bg: inputBg[colorMode],\n            onChange: handleEmailInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), !emailError ? null : /*#__PURE__*/_jsxDEV(FormHelperText, {\n            children: \"Email is required.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 50\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"password\",\n            value: password,\n            placeholder: \"Password\",\n            bg: inputBg[colorMode],\n            onChange: handlePasswordInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), !passworError ? null : /*#__PURE__*/_jsxDEV(FormHelperText, {\n            children: \"Password is required.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 52\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n          justifyContent: \"right\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            colorScheme: \"green\",\n            onClick: handleLogin,\n            children: \"Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            colorScheme: \"red\",\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n_s(SignUp, \"Sq3llEj/WHHTbEOkzPOE8BbchqM=\", false, function () {\n  return [useColorMode];\n});\n_c = SignUp;\nexport default SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["React","useState","Flex","Box","ButtonGroup","Button","Input","Stack","useColorMode","FormControl","FormLabel","FormHelperText","SignUp","props","username","setUsername","email","setEmail","password","setPassword","usernameError","setUsernameError","emailError","setEmailError","passworError","setPasswordError","colorMode","toggleColorMode","boxBg","light","dark","inputBg","handleUsernameInput","e","target","value","handleEmailInput","handlePasswordInput","passwordError","handleLogin"],"sources":["H:/Computer Science/Side Project/todo-list/frontend/src/components/SignUp.jsx"],"sourcesContent":["import React, { useState } from \"react\"\r\nimport { Flex, Box, ButtonGroup, Button, Input, Stack, useColorMode } from \"@chakra-ui/react\"\r\nimport { FormControl, FormLabel, FormHelperText } from \"@chakra-ui/react\";\r\n\r\nfunction SignUp(props) {\r\n    const [username, setUsername] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [usernameError, setUsernameError] = useState(false);\r\n    const [emailError, setEmailError] = useState(false);\r\n    const [passworError, setPasswordError] = useState(false);\r\n    \r\n    const { colorMode, toggleColorMode } = useColorMode();\r\n    const boxBg = { light: \"gray.100\", dark: \"gray.400\"};\r\n    const inputBg = { light: \"gray.200\", dark: \"gray.600\" };\r\n\r\n    function handleUsernameInput(e) {\r\n        setUsername(e.target.value);\r\n        if (usernameError && username !== \"\"){\r\n            setUsernameError(false);\r\n        }\r\n\r\n    }\r\n\r\n    function handleEmailInput(e){\r\n        setEmail(e.target.value);\r\n        if (emailError && email !== \"\"){\r\n            setEmailError(false);\r\n        }\r\n    }\r\n\r\n    function handlePasswordInput(e){\r\n        setPassword(e.target.value);\r\n        if (passwordError && password !== \"\"){\r\n            setPasswordError(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Flex align=\"center\" justify=\"center\" h=\"80vh\">\r\n            <Box p={5} borderWidth=\"1px\" w=\"500px\" rounded=\"lg\" bg={boxBg[colorMode]}>\r\n                <Stack spacing={3}>\r\n                    <FormControl>\r\n                        <FormLabel>Username</FormLabel>\r\n                        <Input type='text' \r\n                                value={username}\r\n                                placeholder=\"Username\" \r\n                                bg={inputBg[colorMode]} \r\n                                onChange={handleEmailInput} />\r\n                        {!usernameError ? (null) : (<FormHelperText>Username is required.</FormHelperText>)}\r\n                    </FormControl>\r\n                    <FormControl>\r\n                        <FormLabel>Email</FormLabel>\r\n                        <Input type='email' \r\n                                value={email}\r\n                                placeholder=\"Email\" \r\n                                bg={inputBg[colorMode]} \r\n                                onChange={handleEmailInput} />\r\n                        {!emailError ? (null) : (<FormHelperText>Email is required.</FormHelperText>)}\r\n                    </FormControl>\r\n                    <FormControl>\r\n                        <FormLabel>Password</FormLabel>\r\n                        <Input type='password' \r\n                                value={password}\r\n                                placeholder=\"Password\" \r\n                                bg={inputBg[colorMode]}  \r\n                                onChange={handlePasswordInput} />\r\n                        {!passworError ? (null) : (<FormHelperText>Password is required.</FormHelperText>)}\r\n                    </FormControl>\r\n                    <ButtonGroup justifyContent=\"right\">\r\n                        <Button colorScheme=\"green\" \r\n                                onClick={handleLogin}>Sign up</Button>\r\n                        <Button colorScheme=\"red\">Back</Button>\r\n                    </ButtonGroup>\r\n                </Stack>       \r\n            </Box>\r\n        </Flex>\r\n    );\r\n}\r\n\r\nexport default SignUp"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}