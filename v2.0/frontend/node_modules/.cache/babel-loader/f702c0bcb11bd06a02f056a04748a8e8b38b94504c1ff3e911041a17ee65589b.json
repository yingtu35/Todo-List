{"ast":null,"code":"var _jsxFileName = \"H:\\\\Computer Science\\\\Side Project\\\\todo-list\\\\frontend\\\\src\\\\components\\\\HomePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Flex, Box, Heading, Text, Link, ButtonGroup, Button, Input, Stack, Switch, useColorMode } from \"@chakra-ui/react\";\nimport { FormControl, FormLabel, FormHelperText } from \"@chakra-ui/react\";\nimport Footer from \"./Footer\";\nimport Todos from \"./Todos\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HomePage(props) {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [emailError, setEmailError] = useState(false);\n  const [passwordError, setPasswordError] = useState(false);\n  const [isLogin, setIsLogin] = useState(false);\n  const [userId, setUserId] = useState(null);\n  const {\n    colorMode,\n    toggleColorMode\n  } = useColorMode();\n  const boxBg = {\n    light: \"gray.100\",\n    dark: \"gray.400\"\n  };\n  const inputBg = {\n    light: \"gray.200\",\n    dark: \"gray.600\"\n  };\n  async function handleLogin() {\n    if (email === \"\") {\n      setEmailError(true);\n      return;\n    }\n    if (password === \"\") {\n      setPasswordError(true);\n      return;\n    }\n    const requestOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        \"email\": email,\n        \"password\": password\n      })\n    };\n    const response = await fetch(\"http://localhost:8000/user/login\", requestOptions);\n    if (response.ok) {\n      const data = await response.json();\n      // TODO: navigate to \"/\" send a callback to set userId\n      setUserId(data.user_id);\n      setIsLogin(true);\n    } else {\n      const data = await response.json();\n      console.log(data.detail);\n    }\n  }\n  function handleEmailInput(e) {\n    setEmail(e.target.value);\n    if (email !== \"\") {\n      setEmailError(false);\n    }\n  }\n  function handlePasswordInput(e) {\n    setPassword(e.target.value);\n    if (password !== \"\") {\n      setPasswordError(false);\n    }\n  }\n  function clearHomePage() {\n    // TODO: clear all states\n    return;\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: isLogin ? /*#__PURE__*/_jsxDEV(Todos, {\n      userId: userId,\n      logOutCallback: clearHomePage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 24\n    }, this) : /*#__PURE__*/_jsxDEV(Flex, {\n      align: \"center\",\n      justify: \"center\",\n      h: \"80vh\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        p: 5,\n        borderWidth: \"1px\",\n        w: \"500px\",\n        rounded: \"lg\",\n        bg: boxBg[colorMode],\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"email\",\n              value: email,\n              placeholder: \"Email\",\n              bg: inputBg[colorMode],\n              onChange: handleEmailInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this), !emailError ? null : /*#__PURE__*/_jsxDEV(FormHelperText, {\n              children: \"Email is required.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 54\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"password\",\n              value: password,\n              placeholder: \"Password\",\n              bg: inputBg[colorMode],\n              onChange: handlePasswordInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this), !passwordError ? null : /*#__PURE__*/_jsxDEV(FormHelperText, {\n              children: \"Password is required.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 57\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n            justifyContent: \"right\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              colorScheme: \"cyan\",\n              onClick: handleLogin,\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              colorScheme: \"green\",\n              children: \"Sign up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n_s(HomePage, \"qudF15z5gY/hXY2Ecn2Jynu8nUg=\", false, function () {\n  return [useColorMode];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","Flex","Box","Heading","Text","Link","ButtonGroup","Button","Input","Stack","Switch","useColorMode","FormControl","FormLabel","FormHelperText","Footer","Todos","HomePage","props","email","setEmail","password","setPassword","emailError","setEmailError","passwordError","setPasswordError","isLogin","setIsLogin","userId","setUserId","colorMode","toggleColorMode","boxBg","light","dark","inputBg","handleLogin","requestOptions","method","headers","body","JSON","stringify","response","fetch","ok","data","json","user_id","console","log","detail","handleEmailInput","e","target","value","handlePasswordInput","clearHomePage"],"sources":["H:/Computer Science/Side Project/todo-list/frontend/src/components/HomePage.jsx"],"sourcesContent":["import React, { useState } from \"react\"\r\nimport { Flex, Box, Heading, Text, Link, ButtonGroup, Button, Input, Stack, Switch, useColorMode } from \"@chakra-ui/react\"\r\nimport { FormControl, FormLabel, FormHelperText } from \"@chakra-ui/react\";\r\nimport Footer from \"./Footer\"\r\nimport Todos from \"./Todos\";\r\n\r\nfunction HomePage(props) {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [emailError, setEmailError] = useState(false);\r\n    const [passwordError, setPasswordError] = useState(false);\r\n\r\n    const [isLogin, setIsLogin] = useState(false);\r\n    const [userId, setUserId] = useState(null);\r\n\r\n    const { colorMode, toggleColorMode } = useColorMode();\r\n    const boxBg = { light: \"gray.100\", dark: \"gray.400\"}\r\n    const inputBg = { light: \"gray.200\", dark: \"gray.600\" };\r\n\r\n    async function handleLogin(){\r\n        if (email === \"\") {\r\n            setEmailError(true);\r\n            return;\r\n        }\r\n        if (password === \"\") {\r\n            setPasswordError(true);\r\n            return;\r\n        }\r\n\r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            headers: {\"Content-Type\": \"application/json\"},\r\n            body: JSON.stringify({\r\n                \"email\": email,\r\n                \"password\": password,\r\n            }),\r\n        }\r\n        \r\n        const response = await fetch(\"http://localhost:8000/user/login\", requestOptions);\r\n        if (response.ok){\r\n            const data = await response.json();\r\n            // TODO: navigate to \"/\" send a callback to set userId\r\n            setUserId(data.user_id);\r\n            setIsLogin(true);\r\n        }else {\r\n            const data = await response.json();\r\n            console.log(data.detail)\r\n        }\r\n\r\n    }\r\n\r\n    function handleEmailInput(e){\r\n        setEmail(e.target.value);\r\n        if (email !== \"\"){\r\n            setEmailError(false);\r\n        }\r\n    }\r\n\r\n    function handlePasswordInput(e){\r\n        setPassword(e.target.value);\r\n        if (password !== \"\"){\r\n            setPasswordError(false);\r\n        }\r\n    }\r\n\r\n    function clearHomePage(){\r\n        // TODO: clear all states\r\n        return;\r\n    }\r\n\r\n    return (\r\n        <Box>\r\n            {/* <Box p={1} mb={2} bg=\"gray.400\" textAlign=\"center\">\r\n                <Heading as=\"h1\" noOfLines={1}>\r\n                    Todo List\r\n                </Heading>\r\n                <Stack direction=\"row\" spacing={3} justifyContent=\"center\">\r\n                    <Text as='b'>Light</Text>\r\n                    <Switch isChecked={colorMode === 'dark'} onChange={toggleColorMode} />\r\n                    <Text as='b'>Dark</Text>\r\n                </Stack>\r\n            </Box> */}\r\n            {isLogin? (<Todos userId={userId} logOutCallback={clearHomePage}/>):(\r\n            <Flex align=\"center\" justify=\"center\" h=\"80vh\">\r\n                <Box p={5} borderWidth=\"1px\" w=\"500px\" rounded=\"lg\" bg={boxBg[colorMode]}>\r\n                    <Stack spacing={3}>\r\n                        <FormControl>\r\n                            <FormLabel>Email</FormLabel>\r\n                            <Input type='email' \r\n                                   value={email}\r\n                                   placeholder=\"Email\" \r\n                                   bg={inputBg[colorMode]} \r\n                                   onChange={handleEmailInput} />\r\n                            {!emailError ? (null) : (<FormHelperText>Email is required.</FormHelperText>)}\r\n                        </FormControl>\r\n                        <FormControl>\r\n                            <FormLabel>Password</FormLabel>\r\n                            <Input type='password' \r\n                                   value={password}\r\n                                   placeholder=\"Password\" \r\n                                   bg={inputBg[colorMode]}  \r\n                                   onChange={handlePasswordInput} />\r\n                            {!passwordError ? (null) : (<FormHelperText>Password is required.</FormHelperText>)}\r\n                        </FormControl>\r\n                        <ButtonGroup justifyContent=\"right\">\r\n                            <Button colorScheme=\"cyan\" \r\n                                    onClick={handleLogin}>Login</Button>\r\n                            <Button colorScheme=\"green\">Sign up</Button>\r\n                        </ButtonGroup>\r\n                    </Stack>       \r\n                </Box>\r\n            </Flex>\r\n            )}\r\n        </Box>\r\n    )\r\n    \r\n}\r\n\r\nexport default HomePage"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}